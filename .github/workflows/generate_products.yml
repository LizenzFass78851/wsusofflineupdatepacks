name: generate_products

on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/generate_products.yml'
  schedule:
    - cron: '34 14 */3 * 2'
  workflow_dispatch:

jobs:
  build_latest:
    container:
      image: ubuntu:22.04
    strategy:
      fail-fast: false
      matrix:
        target: [w62-x64, w63, w63-x64, o2k13, o2k16]
#        target: [w62-x64, w63, w63-x64, w100, w100-x64, o2k13, o2k16]
    runs-on: ubuntu-latest
    env:           
      GIT_BRANCH: latest
    if: github.repository == 'lizenzfass78851/wsusoffline-release'

    steps:

      - name: key
        id: key
        run: |
          export KEY="${GITHUB_WORKFLOW%-*}"
          echo "key=$KEY" >> $GITHUB_OUTPUT
          echo "################################################################" && bash -c "echo KEY=$KEY"

      - name: update
        run: apt-get -y update && apt-get -y upgrade && apt-get -y dist-upgrade

      - name: install
        run: |
          DEBIAN_FRONTEND=noninteractive apt-get -y install \
            git locales curl jq file cabextract hashdeep unzip wget xmlstarlet dialog genisoimage rsync trash-cli iputils-ping

      - name: locale
        run: locale-gen en_US.utf8 && locale-gen de_DE.UTF-8 && update-locale
   
      - name: clone
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git clone https://github-actions:$GITHUB_TOKEN@${GITHUB_SERVER_URL##*/}/$GITHUB_REPOSITORY.git $GITHUB_WORKSPACE --branch ${{ env.GIT_BRANCH }}

      - name: prepare
        run: |
          adduser --shell /bin/bash --uid 1000 --disabled-password --home /home/builder builder
          chmod -R 777 ./

      - name: generate
        run: |
          export LANG=en_US.utf8
          [ "${{ github.workflow }}" != "${{ steps.key.outputs.key }}" ] && c=5 || c=1
          seq $c | while read x; do cd ./sh && bash fix-file-permissions.bash && su builder -c '$SHELL $PWD/download-updates.bash ${{ matrix.target }} deu,enu -includesp' && su builder -c '$SHELL $PWD/create-iso-image.bash ${{ matrix.target }} -includesp'; done
      
      - name: after prepare
        run: |
          rm -r ./client
          cd ./iso
          export isofile=$(ls *.iso)
          split -b 1920M  $isofile $isofile.
          rm $isofile
   
      - name: Publish release ISO
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ env.GIT_BRANCH }}-${{ matrix.target }}"
          prerelease: false
          title: "wsusoffline package for ${{ env.GIT_BRANCH }}-${{ matrix.target }}"
          files: ./iso/*.iso*

  build_esr:
    container:
      image: ubuntu:22.04
    strategy:
      fail-fast: false
      matrix:
        target: [w60, w60-x64, w61, w61-x64, w62-x64, w63, w63-x64, o2k13, o2k16]
#        target: [w60, w60-x64, w61, w61-x64, w62-x64, w63, w63-x64, w100, w100-x64, o2k13, o2k16]
    runs-on: ubuntu-latest
    env:           
      GIT_BRANCH: esr
    if: github.repository == 'lizenzfass78851/wsusoffline-release'


    steps:

      - name: key
        id: key
        run: |
          export KEY="${GITHUB_WORKFLOW%-*}"
          echo "key=$KEY" >> $GITHUB_OUTPUT
          echo "################################################################" && bash -c "echo KEY=$KEY"

      - name: update
        run: apt-get -y update && apt-get -y upgrade && apt-get -y dist-upgrade

      - name: install
        run: |
          DEBIAN_FRONTEND=noninteractive apt-get -y install \
            git locales curl jq file cabextract hashdeep unzip wget xmlstarlet dialog genisoimage rsync trash-cli iputils-ping

      - name: locale
        run: locale-gen en_US.utf8 && locale-gen de_DE.UTF-8 && update-locale
   
      - name: clone
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git clone https://github-actions:$GITHUB_TOKEN@${GITHUB_SERVER_URL##*/}/$GITHUB_REPOSITORY.git $GITHUB_WORKSPACE --branch ${{ env.GIT_BRANCH }}

      - name: prepare
        run: |
          adduser --shell /bin/bash --uid 1000 --disabled-password --home /home/builder builder
          chmod -R 777 ./

      - name: generate
        run: |
          export LANG=en_US.utf8
          [ "${{ github.workflow }}" != "${{ steps.key.outputs.key }}" ] && c=5 || c=1
          seq $c | while read x; do cd ./sh && bash fix-file-permissions.bash && su builder -c '$SHELL $PWD/download-updates.bash ${{ matrix.target }} deu,enu -includesp' && su builder -c '$SHELL $PWD/create-iso-image.bash ${{ matrix.target }} -includesp'; done
      
      - name: after prepare
        run: |
          rm -r ./client
          cd ./iso
          export isofile=$(ls *.iso)
          split -b 1920M  $isofile $isofile.
          rm $isofile
   
      - name: Publish release ISO
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ env.GIT_BRANCH }}-${{ matrix.target }}"
          prerelease: false
          title: "wsusoffline package for ${{ env.GIT_BRANCH }}-${{ matrix.target }}"
          files: ./iso/*.iso*

